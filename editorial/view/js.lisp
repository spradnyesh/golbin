(in-package :hawksbill.golbin)

;; http://msnyder.info/posts/2011/07/lisp-for-the-web-part-ii/#sec-6
(defmacro $$ ((selector event-binding) &body body)
  `((@ ($ ,selector) ,event-binding) (lambda () ,@body)))

(defun on-load ()
  (import-macros-from-lisp '$$)
  (ps ($$ (document ready)
        (flet ((article-change-category ()
                 (let ((cat-id (parse-int ((@ ($ "#cat") val))))
                       (e nil))
                   (dolist (ct category-tree)
                     (when (= cat-id (@ (elt ct 0) id))
                       ((@ ($ "#subcat") empty))
                       (when (elt ct 1)
                         (dolist (subcat (elt ct 1))
                           (setf e ((@ ((@ ($ "<option></option>")
                                           val)
                                        (+ "" (@ subcat id)))
                                       text)
                                    (@ subcat name)))
                           ((@ ($ "#subcat") append) e)))))))))
        ($$ ("#cat" change)
          (article-change-category))
        (article-change-category))))
